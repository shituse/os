#include<stdio.h>
void findWaitingTime(int n,int bt[],int wt[],int quantum)
{
    int rem_bt[n];
    for(int i=0;i<n;i++)
        rem_bt[i]=bt[i];
    int t=0;
    while(1){
        int done=1;
        for(int i=0;i<n;i++){
            if(rem_bt[i]>0){
                done=0;
                if(rem_bt[i]>quantum){
                    t+=quantum;
                    rem_bt[i]-=quantum;
                }
                else{
                    t=t+rem_bt[i];
                    wt[i]=t-bt[i];
                    rem_bt[i]=0;
                }
            }
        }
        if(done==1)
            break;
    }
}

void findTurnAroundTime(int n,int bt[],int wt[],int tat[])
{
    for(int i=0;i<n;i++){
        tat[i]=wt[i]+bt[i];
    }
}

int main()
{
    int n,qnt;
    printf("Enter no. of processes:");
    scanf("%d",&n);
    int bt[n],wt[n],tat[n];
    printf("Enter burst time for each process:\n");
    for(int i=0;i<n;i++){
        scanf("%d",&bt[i]);
    }
    printf("Enter quantum time:");
    scanf("%d",&qnt);
    findWaitingTime(n,bt,wt,qnt);
    findTurnAroundTime(n,bt,wt,tat);
    float awt=0.0,atat=0.0;
    printf("\nProcess\tbt\twt\ttat");
    for(int i=0;i<n;i++){
        printf("\n%d\t%d\t%d\t%d",i+1,bt[i],wt[i],tat[i]);
        awt+=wt[i];
        atat+=tat[i];
    }
    printf("\nAvg waiting time=%f",(awt/n));
    printf("\nAvg turnaround time time=%f",(atat/n));
    return 0;
}
